// Solution for https://adventofcode.com/2022/day/3 (Ctrl+Click in VS to follow link)

// Your input: strings that describe rucksack content, each char is an item
// A string contains two halves, first half describes compartment 1, second half compartment 2
// Lowercase item types a through z have priorities 1 through 26.
// Uppercase item types A through Z have priorities 27 through 52.

string myInput = "DMwrszrfMzSSCpLpfCCn\r\nRMvhZhQqlvhMvRtbvbcPclPlncddppLTdppd\r\ntVMQhFtjjWmsFJsmsW\r\ntrRtvNhfJhSzzSTFVhQQZQhHGphP\r\nCnLMBWLwDMgMcwwdngdHGPVTQGpTHZdGPGpd\r\nLLDqcDgwqCMnLWqtvzrzbbtJqPjJ\r\nwQQwHNQLmbWQbQRHwHNFBbwqPfjqlzRMGRqzpSfvPlzplM\r\nnCtGCZZtsGsrtDMZpfMpSlMlvlZq\r\ncJctJCgVJsCJnDTsCthGhGLwBWBbbQmLbgQLQQdWbbbQ\r\nZWnNlTNTnhhQQlDNdmmpwrrrqBwjwjZd\r\nGzvlVRSfvMVMvGlSpdCCdjmfpmBCdsqB\r\nbzlFlLzJWLHHttLL\r\nSmzFhVDzrmSrszVDVhSVbhZcCZdfZNcnMfMbZnNN\r\nPTTRGqwqTqWRwLgTLTZGnCbZbNddZCCtMcNs\r\nsgPqPqgJgWWqjjwgwLLVFBFSVmvmBBrmJJDSvp\r\nCBccfSBhcSBddfgtlJmmmwmPRwmh\r\nFpTzzGWHWprgDtJlDZDPFR\r\nHbbTzWnTrnWtCbQBbQqQbSjf\r\nfPHspCjgwZggSvZQ\r\nRrNhzFZFcNzFLNLNwQlSlLnv\r\nTRFrcDVrrRmrhFRZzVrczqhRpjqjsssCpfHjsCdpsPfpjCMC\r\nZBnBTMVTSbGbTVTGbCPgqsgPtHtgCcPtBB\r\nldDrmnnNrzhdhfgcsHqcsfCcsCHg\r\nzFdrzNdzQNDDhFdWldDrJTbZTbLZJVVVpMVWVnLS\r\npLnpQNhBbnWvbsWm\r\nFrFwjlTPTdTqqrDZWbvmZbpSgmJWvbgS\r\nRqDqRrdGFpGRFrFFdTNzCcHcHLHBzQCcNNGN\r\nbvRCtbtCPfSGtCcvCbPNlglqgqlGZMzTgnlZnq\r\nhrmWWFspsHWrzNwTnFlTMTwFFn\r\nHpjJDWBQmmQdRffbPtSzdJ\r\nGpHjFsjMFpCpMWjMGCqWmmqrWQtmthdbDbbD\r\nfzgLTJwJPSgJgzSzPfhmqmQhQHzQtbQDrrmq\r\nRNlBRwHfRJHLLfHTwLSBppNGvjNMFFCVpVFcvcFC\r\nSfQnfSFHfnvMtQQSnHJtMffsdTlZtdZmtllmTlmlRRbBRLDb\r\nhrwhWWwqzPrcCzwwzmPlRbdmlQDTPPBLDl\r\nCpwCzrwGzNCWrJnMvpMvfJVFvQ\r\nrCRPpgSggcpqrhPrCDDTLsMLDSDGLTMGVs\r\nHdvzmRWmlHzwvWHvRHRvHJbDFsdMssQQVGMDTMDLVLLFLT\r\nJBlBnnWBJlCqZRRqRBpr\r\nGtZllZDlfDpGHZtZBGBZpDmzQzzCSVVFHmmmsPCQWWSS\r\nJvFJJrwvNNcJTnbrTRNRSCzqwSsVPCPQqmCQszVm\r\nJLMnTbLnMgBhDFDf\r\nlffDhtgDJzCJNGGTzWTRRnRvBv\r\nqpbpdwqZwqZSwMPSqdQcQmTRnWvnBnRBQBtVnTvWmB\r\nSccbbwSbZbFPswpSZtgFlClLhgChhhNfJlFj\r\nClmCjCJBjwBVwJGjlGNFJlVMHSrfpDpTfrHMcHTppQVrHp\r\ndRLZWLvWSHmTccWW\r\nggtqzmRZnmhghZhZghntdqsvBbjlbNFFBPwNNJNNCBlwPGBz\r\nHZmsFZQpvZsWCZQvWrghGrhtgNzdHddHGh\r\nfWSbqWDJVwcSccNzrNhcBtGcgG\r\nVqVfTJnbWjqTSqbwDRfRvQvFpFLRpZsssQsCQZ\r\nFpFZNfplSTJmbZzddGzhDrWh\r\nLqLPPQjLLRMPqvjLLHQrLqrRWdzHnGhdthttGGbbDWhDDdWz\r\nsMLMgvRLgscrLrRQvwmTNNfpNplglplfmp\r\nMPVBmCmWGWRPPqRhLcnjcvjjcpjMvp\r\ntzwrwsJlrldJsrsrTtrzrTtSNnLJSShnjcncvnvqnSFnqN\r\nrswrzsbdwDHHbWZqVfWV\r\ndVmmMTmBPTrCBRMCqFHSWFFHWzCvCz\r\njNqfGsDqtsjGjQjDlcJFFFznFtzznvtFpFFp\r\nfNNhgsDcfNflqchVRdgVrRPRdVTRRb\r\nHJPLwgLvjttmgHJFjwHgtlsBbNbbNsPpblspTllThT\r\nMzmcRRrdDMVTzbhNNSszhl\r\nmCDDVqdVcdDrqfcCnrFwtGwvngwvtWJtFjWW\r\ndFDpmttBlvNNgWlglNDBFttmTGHTcSSJJHHnMsJsGGSdqcJj\r\nzLbwMLVQbQRwVsJsSHSsHcJqbj\r\nwfVZLPzfZZmpMZZMBl\r\nPZHZMJSTBWHNWSHzVnhhfnhThhpnpC\r\njFdBBtrFjpfnjfnf\r\nccGrbblbGRDQMlvmQBvmBl\r\nPCCTsnbPbHDnlDfDNB\r\nrMjQltgSqtvMjScQggjfVVzBzFHzGfVGDLGBqB\r\nvdtrMSttcdwcpSQSdglMrtWRRPJZCpsRZJmWRRWChWPh\r\npWzbsPCCPPpbptSMCJJwBQQGQt\r\ncDDmcTTRRqzFRddVTSJwMShMtBwhwQMDwv\r\nHldqVmVlZdLTcmRFdrngNNzrffjWpPLggP\r\nJPqvjJmmqvSLmPtpZdcftdmtfdCC\r\nswwhDRwBBHjFFBtBfZ\r\nRRzNQDwznDsDwWJjLNlrSPLSTr\r\nVQmdRLvDlmqZdFrBBJdW\r\nCMstGsnHnHGGMrMZwMpwBSbW\r\nGnsshssNfjtsnggnHCGhjtmfLQQczllvDRVTTQllQWlQ\r\ndhbNbswbwVdNtVdstBtgbNQTBCCSFTmfmMFmfRqQmmQM\r\nHFljLrvZfMQQQPvm\r\nWrpznLZZrnplpWbgdFcFsNzszgst\r\nLjddfTlMccnBfDQBtBQb\r\nZRSNchHwhNNCHNSWPQFFFHDBBtnQDH\r\nCNpZshSZgpwJmpdLMlplMc\r\nbTmTFmqzgbBntRVsFvVwcv\r\nCZfMrlZLLLMlfPZRLRHGstnjGwtvGcsSVwtcSGvn\r\nClZpMLCRMZMrHMLmWpqQBpzpgQzmbg\r\njDmSSGWDDdWdSqqDDqCqpJzqRRqpJnRsMRcMzM\r\nlPgNPvPrrgNrPhNszFggnRzccbMJgz\r\nZQTHQvQTZPrrQlBBrNvQZZGtTtGdsVCGsCTLLGDmLsjt\r\nrbCfBrbsvQqRFZRNZC\r\nHLSTcwqwZSQFFgRZ\r\nwdDwjpMHqJDTMTdqjlfBvGBhsbfhbsnb\r\nZhZcHHHlhgchHhlCZZhLCCbGdrsBBGPNBjGbsjNNjnJnPn\r\nwtJqqwDqQQMQFqSqTzwzVTBnGdsjBdnMdPGBBsBdnrjr\r\nRVzJzmSVZmLLWpCc\r\ngdqjQQrlhhQlQrhsnjjhLgmmvmHBBmTmZRsHJzTBHRJv\r\nNwNnGNbGPbmTGpJzppBG\r\nnDnVDfMDrQqQStgM\r\nMLbgbppMMgLmHgQttGQJgJrBShwNShWBBSNNrwNqNN\r\nGnTFlzCVVwPRrVWhSw\r\nGnDDdvdnZDTdnGMsHbbttZgttLbc\r\nmdmPmjClrTzqttfm\r\ncpFnSbcQQsqNNtqWJzHS\r\nQFpcMMBcZtLpQBjVjZhlPjjVlwvw\r\nspVsPjTZZMpZMVLDjmdSQJCLJSmLzdJQdl\r\nHhRnNrqwMhNhnqnHwGNRFBNBrzSCSdQmQCdddbrQSSclSSbQ\r\nnFNqGRvqBfjMvTssfZ\r\nFjjzjnpFqqzFFqgFSZjBhHfHhnHRDDwfdTdLfD\r\nMmCMGCsMWbtJrtCWCbmsmWWhdLGGwRBwdfdLhdTLhHHTBd\r\nbJmtrRvRjgzFFvVq\r\nRWwWmVQGMFGmMGVCVWRRZSBgDdSdJGlSJpcBGGSlpJ\r\nHHhQThnjBDHfSBlS\r\nbPhNjbsssQzFNQqWmz\r\nFTDtrjqwwqGtDbGnfBlcnLcWBZwlWn\r\nmMhRMvJsJvJnMHCvHmhLZLQlhWQBBfPfLPBZ\r\nHRCCsdNdvNmCvggFStbzjbGSSjjn\r\nsLGddsvvcZmLvrLMGcMsVnTTlqlHCsTHHVVgVt\r\nwRbfJPbpNRffRJMBhpDntTCHFNVgqllFlqggHC\r\nDpfbPhRDJPMJppJwzfpbbDGSjrGZvdccQdjGvQZdvrLz\r\nwTwLNLVTqnLMsBwfMsJmCj\r\nJhlGvcdJhSFvFvvvMfgBpCzjzdCfsMMs\r\nDSlPPJSGWrDcFPhtFhWJZHQZLTQVnRWRbHbZHQQT\r\nTmTgTrPDNLNVlDrmlbgNmrSSGbzjZGMvjpZjvvphWMzW\r\nQtBfdfQcdfHtZcnZnGZzchnp\r\nHQHwRBGfBCGBtsrCNPDTmTlNLr\r\nbfNhjhNJDWhlWhlRRR\r\nSsscnHgnSnZnltqqfWRWrzZv\r\ncnfTMfmMnTnmFGsnTVLLLpQJbpbbjpdTdN\r\nBqwZzqRQQRRPSlFRQDDwdfWwhJphnfgfnpMdJfdM\r\nrcTLrcrvDDChWJhfpTgTJh\r\nDHGbGNVCZStGqSqS\r\ndlfdRNNfVdLwrRnwdwRmhLFsbsJJgLqbgCBWBCsW\r\nPHDppMPMHHDPzmBBCmWJqCmbJD\r\nHzzZHmZzQcNdRRdZwddr\r\nwrlshslPsSRfvrQvwbrslCDghtDgCVhDhBVJCFHddt\r\nmZnGpWpWzGTMqnFqDqJNDNFJVJqH\r\nLjpzGcjMGcTzcmmznWSRsfRPfcrbFQcfrwcv\r\nrWBmmmtNmmtBbtlwnhJJVZbw\r\nFsRcjGdLdvFslZbQJZwQps\r\nGHFGvMccFPjgDNbmWWBTTHNz\r\nGhHzmhmwlpbltGBmBmsZsBZsfCWC\r\nrgrcCCPdsWBgNVBD\r\nRnRMdQPMCqndSdQdcQhblpLLwhJbbpzGzwpS\r\nNNQtStFPpJwhRbRzRbqpZZ\r\njLnmdJrrdDTdbgWbTbRW\r\nJHvnMCmDnMnMljLCDmMLjHNFGGNBPVtQQFtSNFQtPQBv\r\nBFbBRllFZJnPVJbV\r\nGpGHwgzcLhDcwttwthzzhHcPTjZjMgMVZjgZTMmTnMZWJVJm\r\nGccwhqcDtlrPqQrRNQ\r\ngWHWLgHBHQdFhjGGThTQhR\r\npZsSMpZMJJSzMszzzqclpfjvrvvcRGGTcTVhbVvRbTGTRG\r\nlnMwsqZqsslpjlSMSsffZqqJBgHNNPNDWdLLgdDgdLHPWwCw\r\nqfNvBCBfBqfNMBqCZZfcnmnvtwScpwFSpSsSwt\r\nHzdVzLWPPGGDdnsswnztsRsnmn\r\nQddWVQgJPPHJTJbjBtNTTq\r\nDdRDDPRGGPGccfcbJwsbJWzsnznlLLWzWTLWhVVVVS\r\nCvCrNCqgFqvmqNZFZqqZvpWlVrlVhlhnTLShlDWnzVBD\r\njvqpvpvpQNCQQCZZmmNgZfdGddRjJDPRMHcHJDHPJf\r\nttdtBtPPMqWMdgPPBbVGWfTGTTzSVLfVrzCS\r\nZpDpvRpZDDcmmjmZfLSrwzRnSVSnwTTR\r\nZvQmjFVHJFDcQjDlZcDVHdqMNtqNBPtPJtbhhbdbts\r\ndGdwwLLpgwgssJpgssNhpJlnbfjnzFfcbfttGjzjlntf\r\nVQvDvHVVQHrQHDCZVBChrHFtzffnfltFFtncnvFtllMl\r\nVBShSqDVRVSTmppPwwsP\r\nfTFDTLNNzlcNrmDcrMDTFPwCSsbCbPPsnCPwLSPvbs\r\nttQqhJtBRRGnvgHGnlSnbl\r\nhZBJlQBRjVRBRjhtRRMNFVmFmfDNrfWcFVmD\r\nmcTZFBFmqBjmBgPtCtPprmssStCP\r\nLWDQNqDJfQNJddnWfzhfsPRVppVVsSptftpVMS\r\nNDGnJDDDbzddWdNbGNQQLQbqqFBBFcjlZBlHjlZHGBTvZB\r\nPwDzvphPwVwWBqLLwnJWTq\r\njdCGCgjmllCrmmlmjrbgmRdgJSSJJFLSSqJfLnqLLLbWffLB\r\nmRdjcMHgDpZhDqMZ\r\ncqLjhhrwZwJbBqZhMwbZZdGWdGSllWFvLFGQdnGFQG\r\ngHHVzzppRVggcgpcGWRQRSvdSvvGWvll\r\nHmNNHtVggHsHPtrhJsbjbwCrCqJc\r\nzqPvzLVvzFFQZzWpRLlmHRDHmRCHDH\r\ndNjnJGGrGdqqMprRlpqB\r\nGsgtjhSsSvvSFqvP\r\npVrfzzjrjWVWTWjrNZvnJSJZqnnqnpSZZS\r\nbdQVQPRPDdcbRGPFddRVMVlZlMlBqSBBZSvSZwnwvJBS\r\nbFbcFbCPPCbbVHCCdVgWfrzjmWfrWrNWgHfT\r\nJgJqLjjjVGgdqGDZGzlGRStStT\r\nPHrHccmrMrTSMVStRtRR\r\nHWPWffNsrppfPWNsVFsmPNCJwwjdJdvdvnJwghBLJLpdLJ\r\nHtHvcnDSDgDcDHtpLrvwjwjfZMjffw\r\nCPWzdJdqVdWZpnLdwnrfdn\r\nGNCNmTQnPVRRglSlHsSG\r\nFJdhjTPbdPJjTPjTjPtSLsSBWWRcCvCvsBWztc\r\nMfGgrHMDDpMnZGDLCRLScCsBlgWvzB\r\nHnmpmNNHGZZpZZrnMPFFbNCNbFdTPVFFFN\r\nTJrrrJQTqJqmTltfRrgfgtgFFg\r\njLRzBvBjjcnFBNwWlgBZFt\r\nRMjMCGpGzGznzhRmmPPDPsmMmPQmJs\r\nBZqwQCQZGZcVBczqBHtfbbbWfTqNWfMfPNqW\r\nLLpmFjpvpHrvRFSRDRMWbdbtfPWPbjtMgMtW\r\nSDnrpDprDFnQhZCVnhcH\r\nWTsBBQTfQQTTbJBbZbnfTsRFwFrjwjFlrRqvrrlqvWRV\r\npGcShcGSLNJNHCLttlpllRFgpRFlRpgRrg\r\nGzcMLScSGJGtCbsbQfbZbMBnBn\r\nNGCLGjVjZjQwTGJRQdWM\r\ncFTcvSrFmnnpSmndMswsRMJWRwMHps\r\nrrrhhcTznqvzmcccvvmhgzqDgbgttlDtjjjlfVCfZCjZZV\r\nccDMHddWNDnnNWMMzdHJJmSQhfQZfvQZflrZQfdVfLLZ\r\nbgBFRTwFtgqCgpRGFpvpVllZlhjrrlVlvj\r\nwtbBGPTPtRTgbCTBqFgGRwFnsWJnmDMsWMJJMzHPhDmJzP\r\nzsbsMtMMdnffBbzNsBtCCWLpLrCrcNLVDWVVcD\r\nTmPhJRvwmjmhFJwjjRPFPTvJGVCcCGBrDpccpDrCrWCVDVFZ\r\nQvSTvBhqwjPmwddHgtqMnllzMl\r\ngftDtqnpqzGZsFcthbtZ\r\nVlNPrBrRNrLBmdRVFCcGCZTFCsTCsbLL\r\nVdldlljlSNHBsSlqfgqMDDvzpHJHWg\r\ntQDLvFLcDrWrcnsHffCGgGHG\r\nZRPTPJqhMZJZVllRZJPVZPRHnhCnfdssnCznzGhdgfwCHn\r\nqPqlPVlTlSqbZZVJplqlPDmrjWFtmLtFWgQvtmtFvp\r\nzlZzdNRPgGGzsLGCDBBtCDCtSncScP\r\nvWvHWbqjrFMbvrTWcVnQBBBSjLDcQJcL\r\nwfLHwfFqLFbhHvWhMWqwbwwRspssmzgpzGgmmNfmzmRGRz\r\nrPvLrQBvBLsLLdtrgssgZjwFwlnCFMtMFnlllnnb\r\nmNmmzpWHlzjlJMJb\r\nTVSVTWpqRWpSTqNbTVRBPDfLLPrSLrsfQrrvsf\r\nnRjpQWnQnRQzMjRdrtvvPCfmvGtPfMcCtG\r\nTDbrbhNZVbbbbwhDZDhbTTGfcftqcGVvmmcqcJCcCPmJ\r\nNLhrSwgwgnsLsQWljW\r\nJWqVSpGNPdNNzdZJJpMzHzwLgsMwzwQwMBgL\r\nclrlcvrRfccCtFbHrBWLgwLHmMHsHg\r\nDbfDFjcvRcvchWZVWdNpGZNqdh\r\nsdfvFLfmtszQwLfddRpmtDDBjVNWGMNQVQNMJGWJMj\r\nlccrncTZhqqcqhWggvrjMNMGrJMG\r\nSblShnZCqSbPhhbcbTTSZFdFsFpmdRwPwzvmswLtmm\r\nPGwwHpfnFSvVpWqWCQNNjCbbnW\r\nlmddlhcDRBlLRchdmzbNjqqWTcbNPNWTzz\r\nRBMrRdRhlDtPrJtfwFHpsvrHpFSrFw\r\nhhwlglFFSQndLRFbmCbTTz\r\nNczHMMqzpzPcpfBffcmTrdfGbbRbGrdGrLCL\r\nqNzNPqMjcqNBWWccBHsZPDhJnllwnwvJvQnJhQsgvD\r\nmbmvmvbbprZmlFmZbFgLffgQtFNHNhfqQtNQ\r\nSJcdzjSJBzdBdJDzQhhLQfqzNQQHggRL\r\njwDwcTTDThvTZPPW\r\nFSVBBBvHvCpVVDDGcGwNNhhctwMvMc\r\nfLLZsZVQmjfTfqQRmQhhtgbbJbGJRghtcGct\r\nqTsTQdqjVfqdVdZZqVLpCpzSpdppBlSpCFdHSC\r\nsQQhWsMmQshlhmMQZFDHDJFjgjzHZgcHdH\r\nLnwnpNRrnrbCqqLpwnqfnLcvFHJFzNcHzJcgJJHgdDgN\r\nwCbnpCfPCVqwwnrrbbPRGMMlSllmlTTmsThVMlsd\r\npzrprfwgbwtwqzrCWbqCwqSMvddHdDSvtHRlDnRRDddD\r\nzQLzQQjPBPFcLcQFTFsmNQzcMNdDdvnldHHvdvnDnRnlvRnJ\r\ncTZGzzscLcPrqrfrZqqbVV\r\nDcSdcTwDLmcwDwvWssGfJfcJQZPGnfcs\r\nFlHFMgtgNggpsztMHMqpjgBBnCfPflfQnZCQBBCnRPZC\r\ngpVjqNVrHFtjqqzSLDTSmTDwwrmhbs\r\nMLMzJTsZzZMgMLgHMmVmdCVhCBlQwDwwhChD\r\nvtPRQpbqCldwdtBC\r\nbQqFbnQbcFfjPRFPQnTrMMgcJgJrssrzgrgS\r\nmtdGJmQRFmdtQvdvtRtdHzHzqZqpHFzZnCzhZjjH\r\nfPwVlllswMVNPfBDDlNVsMsfcBjchHncqzjZbpzjcqCnpHHn\r\nrlsNPWNlhWTPMMNPfwNWTLQRvQLLmgvSJvRJgTRG\r\nTwnqhqqgvQnGBGmBDp\r\nSMjclJSjjVJgCzCzNgpmdBpmBGspRBmpDDVB\r\nJjMCgMMHMMZNStllZSNHhPqFhFWfqPPqTqhLFqtL\r\nlRQPtjPRlDdStDSlPmvllvLsCphFfCHLHggspgFmsFLH\r\nqwpTNprcbNWVHLrfFssBgFCM\r\nNTWTnzTTWGZZZVRSRRQGpdDtSQRp\r\ngpwTPNPBPTdLLLLVGl\r\njSHdjzZHMcDVtDvFjtCF\r\nHqfZMHzbcqRRRWgdqPmBBBNmwW\r\nPvSBtdFgvSmBPngFBTBjbSjwwpGjsppMjNpMjj\r\nVZLfVQLzQQQhllpcNcwbssvwwwZj\r\nvHWLVVqWTmTgttgq\r\nCNRmNRFNRCWbWNCrlmfGlWqFLsDZQZBZzgwQZsBsDZZCzczB\r\nMSjdVHvHnDDhHvdwBwssZVzwcgLcQg\r\nHnMMTdttHSHSpHvDddpSHTjWlNWFlmRtRmRbqGfqGGNNfR\r\nfBLTDppznrfTndfnfTzTLPvZvvHVbRbggjvzVbzvbV\r\nmwmDGGlqDhMqthGqhJMWmlNVRZPHjgwjjRZbbHRgRHvv\r\nDmhsJsshWGhSGlmlmrdcLLsTBBfcfnBppc\r\nmbCGFFmGmcdTrCTQdh\r\nMJHfJNLllJffPLRTdBqTRQNcqQGB\r\nfPJHfSSSWfSLDMLWGHDMLDFmznmsjmvZwzvjZjbvbZ\r\npPvpJSfZTTvCzNZczzQZchcj\r\nsvbHWsqsvbsMFtVHgVtcRQcDlQRRRQLjlqjczj\r\ntBsgvHVMFggbgFrgWnwSndfBmmBJfPSfpn\r\njwbwfjSbwjVSjvZPzWSvhvhQlCsBFgLRLLgBLRClLLFQQw\r\nGdNJHpmHTDnTNJqnFCgBLFLFzFtsQRCd\r\nNpMJHpnMrDpJGTHqTTmJHTPjfcvbWfrffVzvZfVWSbjz\r\nwFwpqWwwpqwtqqrbCFtptDmCcfNhNRzRBZRRJRChVNBZBJ\r\nsvlvjHsQlvdlvMLdlvPSSLtzzczcNhJthfNtRcNMJNMc\r\nHvvPLSHjgltjsvqwbbnmWmDpgwTT\r\nzhCmPVwwChdCBtsWnNWswBWr\r\nGJJSfSgFpjJjGgpfpgrcNNstvnBHNnHLtFHr\r\njgDTfjpMgZMGMGJTMMJRhzZPCzbhVlPqdNCbhd\r\nbDbQQmVDRpDNbRQlfQQZnfwTlllfsT\r\nFChzzBWhVzrgMwffJwlnngnTlJ\r\nMCvqvhFzcHCChjtpNNVLppGmbq\r\nbZZzJnccqdzcLhrcQDLrDs\r\nFfCfWVfjWTFClClfwjWCfGGwhZSDhSLsSSRpZprLph\r\nmFmTMmFjMMWFfZtttflWjmWTngNHJHggJJHtzgnJvBtBgHdv\r\n";

List<(string , string)> pairs = myInput
    .Split("\r\n", StringSplitOptions.RemoveEmptyEntries)
    .Select (x => (x.Substring(0, x.Length/2), x.Substring (x.Length/2)))
    .ToList ();

// Part 1 - Per backpack, find the item that is in both compartments, get its priority and multiply the 
// priorities of all duplicate items over all backpacks

List<char> duplicateItems = pairs.Select (x => x.Item1.Intersect(x.Item2).First()).ToList ();

// Now that we have all duplicate items, get their priorities (could be done in one call, but that's pretty unreadable):

string lookupTable = " abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

List<int> priorities = duplicateItems.Select(x => lookupTable.IndexOf(x)).ToList ();

Console.WriteLine("Part 1 - Sum of all priorities: " + priorities.Sum());

// Part 2 - More of the same, but now we need to group three lines at a time instead of half of the "bag"

string[] bags = myInput.Split("\r\n", StringSplitOptions.RemoveEmptyEntries);

List<int> badgePriorities = new List<int> ();

for (int i = 0; i < bags.Length; i += 3)
{
    //Get the intersection of 3 bags, take the first element (to convert it to a char)
    //And then look up its index in the lookup table
    badgePriorities.Add( lookupTable.IndexOf ( bags[i].Intersect(bags[i + 1]).Intersect(bags[i + 2]).First()) );
}

Console.WriteLine("Part 2 - Sum of all priorities: " + badgePriorities.Sum());

